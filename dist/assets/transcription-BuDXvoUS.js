import{A as r,a as c}from"./useTranscription-lq7WLSPY.js";async function u(e){const o=e.headers.get("content-type")||"";if(!e.ok){if(o.includes("application/json"))try{const t=await e.json(),s=t?.error||t?.message||t?.detail||JSON.stringify(t);throw new Error(`HTTP ${e.status} ${e.statusText}: ${s}`)}catch{const t=await e.text();throw new Error(t||`HTTP ${e.status} ${e.statusText}`)}const n=await e.text();throw new Error(n||`HTTP ${e.status} ${e.statusText}`)}return o.includes("application/json")?e.json():e}async function w(e,o={}){const n=new Headers(o.headers);n.set("Accept","*/*"),n.set("Authorization",`Bearer ${r}`);const t=await fetch(`${c}${e}`,{...o,headers:n,method:"GET"});if(!t.ok){if((t.headers.get("content-type")||"").includes("application/json"))try{const a=await t.json(),d=a?.error||a?.message||a?.detail||JSON.stringify(a);throw new Error(`HTTP ${t.status} ${t.statusText}: ${d}`)}catch{const a=await t.text();throw new Error(a||`HTTP ${t.status} ${t.statusText}`)}const i=await t.text();throw new Error(i||`HTTP ${t.status} ${t.statusText}`)}return t.blob()}async function l(e,o,n={}){const t=new Headers(n.headers);t.set("Authorization",`Bearer ${r}`);const s=await fetch(`${c}${e}`,{method:"POST",body:o,headers:t});return u(s)}function p(e,o){const n=URL.createObjectURL(o),t=document.createElement("a");t.href=n,t.download=e,document.body.appendChild(t),t.click(),document.body.removeChild(t),URL.revokeObjectURL(n)}async function h(e,o){const n=new FormData;return n.append("file",e),n.append("language",o),l("/file-transcribe",n)}async function $(e,o){const n=await w(`/download-transcription/${e}?format=${o}`),t=`transcription_${e}.${o}`;p(t,n)}export{$ as d,h as t};
